D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:33.993 [RMI TCP Connection(3)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcher'
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:36.994 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using log4j2 logging.
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:37.131 [RMI TCP Connection(3)-127.0.0.1] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:38.520 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.5.6.Final
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:39.485 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:40.172 [RMI TCP Connection(3)-127.0.0.1] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgegoxalmsp4h71ulxwc8|6b5e98ae, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.cj.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgegoxalmsp4h71ulxwc8|6b5e98ae, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://127.0.0.1:3306/book_tracker?useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {password=******, user=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:40.203 [RMI TCP Connection(3)-127.0.0.1] WARN  com.mchange.v2.resourcepool.BasicResourcePool - Bad pool size config, start 3 < min 5. Using 5 as start.
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:40.881 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:44.567 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.0.Final
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:46.737 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:47.974 [RMI TCP Connection(3)-127.0.0.1] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f46f97e, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e3d4312, org.springframework.security.web.header.HeaderWriterFilter@702f1ead, org.springframework.security.web.csrf.CsrfFilter@188c652e, org.springframework.security.web.authentication.logout.LogoutFilter@58bba48d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5830ff0b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@643b52b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a8ed4f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@553a2f8, org.springframework.security.web.session.SessionManagementFilter@4728df5, org.springframework.security.web.access.ExceptionTranslationFilter@365ef5e6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38778f43]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:49.068 [RMI TCP Connection(3)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 15052 ms
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:51.996 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:52.005 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:52.006 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:53.385 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:53.388 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:36:53.388 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:01.531 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:01.532 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:01.533 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:01.534 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.091 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.123 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='admin', password='$2a$12$yrqpXaFZTUXIHkriRkWEu.DiCGPMPj1JKjYEhN3Iqf4mrVRjgJxNK', email='admin@email.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}, Role{id=2, name='ROLE_ADMIN'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.128 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.128 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.718 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.719 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.720 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.737 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.737 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.738 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.738 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.747 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.747 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.748 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.748 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.751 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:02.752 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.166 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookController.listBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.166 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.167 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.187 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookService.getBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.187 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.188 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookDAO.getBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.188 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.272 [http-nio-8080-exec-4] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:12.273 [http-nio-8080-exec-4] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Unknown column 'book0_.id' in 'field list'
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.117 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.118 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.118 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.119 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.119 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.120 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.120 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.123 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.123 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.123 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.124 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.127 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:37:14.127 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:24.928 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:24.929 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:24.929 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:29.349 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: RegistrationController.showRegistrationForm(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:29.349 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:29.361 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: RegistrationController.showRegistrationForm(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:29.361 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: registration-form
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:34.292 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:34.292 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:34.293 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:37.467 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: RegistrationController.showRegistrationForm(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:37.467 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:37.468 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: RegistrationController.showRegistrationForm(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:37.468 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: registration-form
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.615 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: RegistrationController.processRegistrationForm(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.615 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: com.aptech.springmvc.entity.RegisteredUser@4fb2f959
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.616 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: org.springframework.validation.BeanPropertyBindingResult: 0 errors
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.616 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {registeredUser=com.aptech.springmvc.entity.RegisteredUser@4fb2f959, org.springframework.validation.BindingResult.registeredUser=org.springframework.validation.BeanPropertyBindingResult: 0 errors}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.621 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserService.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.622 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: nguyenkhanh
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.622 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.622 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: nguyenkhanh
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.626 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.626 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.626 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserService.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.626 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.629 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserService.save(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.629 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: com.aptech.springmvc.entity.RegisteredUser@4fb2f959
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.733 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: RoleDAO.findRoleByName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.734 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: ROLE_EMPLOYEE
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.739 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: RoleDAO.findRoleByName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.740 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: Role{id=1, name='ROLE_EMPLOYEE'}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.740 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.save(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.740 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: User{username='nguyenkhanh', password='$2a$10$PVshS3cH5MlSjgYPe3nG8.n74FlygBBlZpMecGDsqDCjSnbUBX9ei', email='nguyenkhanh4795@gmail.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.810 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.save(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.810 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.810 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserService.save(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.810 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.854 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: RegistrationController.processRegistrationForm(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:38:54.854 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.000 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.000 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: nguyenkhanh
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.000 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.000 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: nguyenkhanh
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.003 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.011 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='nguyenkhanh', password='$2a$10$PVshS3cH5MlSjgYPe3nG8.n74FlygBBlZpMecGDsqDCjSnbUBX9ei', email='nguyenkhanh4795@gmail.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.011 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.011 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=nguyenkhanh, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.137 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.137 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.138 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.139 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.140 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.140 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.140 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.146 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.146 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.146 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.146 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.149 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:01.150 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:21.847 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:21.847 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:21.847 [http-nio-8080-exec-8] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:37.998 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:37.999 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.000 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.000 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.010 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.015 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='admin', password='$2a$12$yrqpXaFZTUXIHkriRkWEu.DiCGPMPj1JKjYEhN3Iqf4mrVRjgJxNK', email='admin@email.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}, Role{id=2, name='ROLE_ADMIN'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.015 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.015 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.435 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.436 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.437 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.438 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.439 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.439 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.439 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.443 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.443 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.443 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.443 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.445 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:39:38.445 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.867 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.868 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.869 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.872 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.872 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.872 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.872 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.878 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.878 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.878 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.878 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.880 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:12.881 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.733 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.733 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.734 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.737 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.738 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.738 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.738 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.742 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.742 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.742 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.742 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.744 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:13.744 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.006 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.006 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.006 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.008 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.009 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.009 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.009 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.017 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.017 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.018 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.018 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.020 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.020 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.994 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.995 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.995 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.997 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.997 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.998 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:15.998 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:16.003 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:16.003 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:16.004 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:16.004 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:16.005 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:16.005 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.624 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.625 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.625 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.626 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.626 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.626 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.626 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.629 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.630 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.630 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.630 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.631 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:18.632 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.217 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.217 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.217 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.221 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.222 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.222 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.222 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.225 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.225 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.225 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.225 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.226 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:19.227 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.853 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.853 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.853 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.857 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.857 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.857 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.858 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.864 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.864 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.866 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.866 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.869 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:20.869 [http-nio-8080-exec-9] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:21.996 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:21.996 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:21.996 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.007 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.007 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.008 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.008 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.013 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.013 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.014 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.014 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.017 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:53:22.017 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.407 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.407 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.409 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.417 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.417 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.418 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.422 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 3
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.427 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.427 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.427 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.427 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}, Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.437 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 20:54:46.438 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:31.466 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:31.467 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:31.467 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.455 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.456 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.456 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.456 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.463 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.466 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='admin', password='$2a$12$yrqpXaFZTUXIHkriRkWEu.DiCGPMPj1JKjYEhN3Iqf4mrVRjgJxNK', email='admin@email.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}, Role{id=2, name='ROLE_ADMIN'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.466 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.467 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.888 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.888 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.888 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.889 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.890 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.891 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.891 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.895 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.895 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.895 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.895 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.897 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:08:34.897 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:19.366 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:19.366 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:19.366 [http-nio-8080-exec-1] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.897 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.898 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.898 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.898 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.902 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.912 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='admin', password='$2a$12$yrqpXaFZTUXIHkriRkWEu.DiCGPMPj1JKjYEhN3Iqf4mrVRjgJxNK', email='admin@email.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}, Role{id=2, name='ROLE_ADMIN'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.912 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:24.913 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.698 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookController.listBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.698 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.698 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.700 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookService.getBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.700 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.700 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookDAO.getBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.700 [http-nio-8080-exec-6] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.705 [http-nio-8080-exec-6] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:25.705 [http-nio-8080-exec-6] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Unknown column 'book0_.id' in 'field list'
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.428 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.428 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.428 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.431 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.431 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.431 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.431 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 2
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.440 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerDAO.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.440 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.441 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerService.getCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.441 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: [Customer{id=1, firstName='David', lastName='Adams', email='david@email.com'}, Customer{id=5, firstName='Maxwell', lastName='Dixon', email='max@email.com'}, Customer{id=2, firstName='John', lastName='Doe', email='john@email.com'}, Customer{id=4, firstName='Mary', lastName='Public', email='mary@email.com'}, Customer{id=3, firstName='Ajay', lastName='Rao', email='ajay@email.com'}]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.443 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: CustomerController.listCustomers(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:10:35.443 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: list-customers
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:13:55.073 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:13:55.074 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:13:55.074 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.477 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.477 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.479 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.479 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.489 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.498 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='admin', password='$2a$12$yrqpXaFZTUXIHkriRkWEu.DiCGPMPj1JKjYEhN3Iqf4mrVRjgJxNK', email='admin@email.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}, Role{id=2, name='ROLE_ADMIN'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.498 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.498 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.939 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookController.listBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.939 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: {}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.939 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: null
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.952 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookService.getBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.952 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: 1
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.952 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: BookDAO.getBooks(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:14:10.952 [http-nio-8080-D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:19.185 [RMI TCP Connection(2)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcher'
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:22.823 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using log4j2 logging.
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:22.973 [RMI TCP Connection(2)-127.0.0.1] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:23.689 [RMI TCP Connection(2)-127.0.0.1] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.5.6.Final
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:24.769 [RMI TCP Connection(2)-127.0.0.1] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:25.362 [RMI TCP Connection(2)-127.0.0.1] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgegoxalmufu2d1w2ex15|13f564cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.cj.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgegoxalmufu2d1w2ex15|13f564cb, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://127.0.0.1:3306/book_tracker?useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {password=******, user=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:25.398 [RMI TCP Connection(2)-127.0.0.1] WARN  com.mchange.v2.resourcepool.BasicResourcePool - Bad pool size config, start 3 < min 5. Using 5 as start.
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:25.972 [RMI TCP Connection(2)-127.0.0.1] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:27.265 [RMI TCP Connection(2)-127.0.0.1] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.0.Final
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:29.807 [RMI TCP Connection(2)-127.0.0.1] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:31.902 [RMI TCP Connection(2)-127.0.0.1] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@426fef46, org.springframework.security.web.context.SecurityContextPersistenceFilter@52567b4e, org.springframework.security.web.header.HeaderWriterFilter@665307e4, org.springframework.security.web.csrf.CsrfFilter@6e4ccb15, org.springframework.security.web.authentication.logout.LogoutFilter@273a9b19, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4635f76c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b787f66, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e22003d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71931d0f, org.springframework.security.web.session.SessionManagementFilter@4c77b39a, org.springframework.security.web.access.ExceptionTranslationFilter@6c4e5e24, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4d562fe6]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:33.953 [RMI TCP Connection(2)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 14735 ms
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:34.849 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:34.919 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:34.928 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:34.928 [http-nio-8080-exec-5] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:34.928 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:34.930 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:37.359 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:37.359 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:37.359 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:37.960 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:37.961 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:37.961 [http-nio-8080-exec-10] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:42.412 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:42.413 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:42.414 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:25:42.415 [http-nio-8080-exec-4] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptD:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:08.814 [RMI TCP Connection(3)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcher'
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:11.092 [MLog-Init-Reporter] INFO  com.mchange.v2.log.MLog - MLog clients using log4j2 logging.
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:11.225 [RMI TCP Connection(3)-127.0.0.1] INFO  com.mchange.v2.c3p0.C3P0Registry - Initializing c3p0-0.9.5.5 [built 11-December-2019 22:18:33 -0800; debug? true; trace: 10]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:11.721 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.5.6.Final
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:12.473 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:13.050 [RMI TCP Connection(3)-127.0.0.1] INFO  com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hgegoxalmunasciyynzc|9343c28, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.cj.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hgegoxalmunasciyynzc|9343c28, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://127.0.0.1:3306/book_tracker?useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {password=******, user=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:13.095 [RMI TCP Connection(3)-127.0.0.1] WARN  com.mchange.v2.resourcepool.BasicResourcePool - Bad pool size config, start 3 < min 5. Using 5 as start.
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:13.574 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:14.371 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.0.Final
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:16.165 [RMI TCP Connection(3)-127.0.0.1] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:17.174 [RMI TCP Connection(3)-127.0.0.1] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55993819, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c0cfcfb, org.springframework.security.web.header.HeaderWriterFilter@20c4f1d8, org.springframework.security.web.csrf.CsrfFilter@2794ad69, org.springframework.security.web.authentication.logout.LogoutFilter@4758662d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@10f46866, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5723f8d7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b3303ec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78de3b0e, org.springframework.security.web.session.SessionManagementFilter@27441f0a, org.springframework.security.web.access.ExceptionTranslationFilter@492a6b46, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f29f819]
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:18.182 [RMI TCP Connection(3)-127.0.0.1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9355 ms
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:20.508 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:20.521 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:20.522 [http-nio-8080-exec-3] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:21.359 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:21.359 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: LoginController.showMyLoginPage()
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:21.359 [http-nio-8080-exec-7] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: user-login
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.349 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.350 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.351 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @Before advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.351 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> argument: admin
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.667 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDAO.findByUserName(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.691 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: User{username='admin', password='$2a$12$yrqpXaFZTUXIHkriRkWEu.DiCGPMPj1JKjYEhN3Iqf4mrVRjgJxNK', email='admin@email.com', enabled=true, roles=[Role{id=1, name='ROLE_EMPLOYEE'}, Role{id=2, name='ROLE_ADMIN'}]}
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.695 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> in @AfterReturning advice: calling method: UserDetailsService.loadUserByUsername(..)
D:AptechJavaSpringNguyenDuyKhanh-Spring-MVClog/2021-11-24 21:31:54.695 [http-nio-8080-exec-2] INFO  com.aptech.springmvc.aspect.LoggingAspect - ===> Result: org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN, ROLE_EMPLOYEE]]
D:AptechJavaSpringNguyenDuyKhanh-Spring